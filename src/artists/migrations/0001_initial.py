# Generated by Django 4.2.16 on 2025-03-03 18:48

from django.conf import settings
from django.db import migrations, models
import nightlife.methods


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('comments', '0002_comment_published'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tags', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name="Nom de l'artiste")),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False, verbose_name='Publié')),
                ('is_sponsored', models.BooleanField(default=False, verbose_name='Sponsorisé')),
                ('biography', models.TextField(blank=True, verbose_name='Biographie')),
                ('thumbnail', models.ImageField(blank=True, upload_to=nightlife.methods.PathAndRename('artists/'))),
                ('spotify', models.CharField(blank=True, max_length=255)),
                ('soundcloud', models.URLField(blank=True, max_length=255)),
                ('instagram', models.URLField(blank=True, max_length=255)),
                ('facebook', models.URLField(blank=True, max_length=255)),
                ('playlist', models.CharField(blank=True, max_length=255)),
                ('comments', models.ManyToManyField(blank=True, related_name='artist_comments', to='comments.comment')),
                ('followers', models.ManyToManyField(related_name='fan', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(related_name='artist_tags', to='tags.tag')),
            ],
            options={
                'verbose_name': 'Artiste',
                'ordering': ['name'],
            },
        ),
    ]
